---
- name: Настройка сервера Debian 11 и установка PostgreSQL 16
  hosts: web
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
    pg_password: "old3gg_test_pass"

  tasks:
    - name: Установка необходимых пакетов
      apt:
        name:
          - wget
          - ca-certificates
          - gnupg
          - lsb-release
          - python3
          - python3-pip
          - python3-dev
          - libpq-dev
          - python3-psycopg2
        state: present

    - name: Добавление репозитория PostgreSQL
      shell: |
        wget --quiet --no-check-certificate -O /usr/share/keyrings/pgdg.asc https://packages.postgresql.org/keys/ACCC4CF8.asc
        echo "deb [signed-by=/usr/share/keyrings/pgdg.asc] http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -c | awk '{print $2}')-pgdg main" > /etc/apt/sources.list.d/pgdg.list

    - name: Установка PostgreSQL 16
      apt:
        name: postgresql-16
        state: present

    - name: Создание виртуального окружения
      command: python3 -m venv /opt/pg_venv creates=/opt/pg_venv

    - name: Установка необходимых библиотек
      pip:
        name:
          - psycopg2
        virtualenv: /opt/pg_venv
        state: present

    - name: Активация виртуального окружения
      set_fact:
        ansible_env:
          PATH: "{{ ansible_env.PATH }}:/opt/pg_venv/bin"

    - name: Запуск и включение автозапуска PostgreSQL
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Установка пароля для пользователя postgres
      become_user: postgres
      community.postgresql.postgresql_user:
        name: postgres
        password: "{{ pg_password }}"

    - name: Создание базы данных mydb
      become_user: postgres
      community.postgresql.postgresql_db:
        name: mydb
        state: present

    - name: Создание пользователя db_user
      become_user: postgres
      community.postgresql.postgresql_user:
        name: db_user
        password: "test_user_password"
        db: mydb
        priv: "ALL"
        state: present

    - name: Настройка прослушивания всех адресов
      lineinfile:
        path: /etc/postgresql/16/main/postgresql.conf
        regexp: '^#?\s*listen_addresses\s*=\s*.*'
        line: "listen_addresses = '*'"
        create: yes

    - name: Разрешение удаленных подключений
      lineinfile:
        path: /etc/postgresql/16/main/pg_hba.conf
        regexp: '^host\s+all\s+all\s+127\.0\.0\.1/32\s+md5$'
        line: 'host    all             all             0.0.0.0/0               md5'

    - name: Перезапуск PostgreSQL
      service:
        name: postgresql
        state: restarted

    - name: Проверка подключения к БД
      postgresql_query:
        login_host: "{{ ansible_host }}"
        login_user: postgres  
        login_password: "{{ pg_password }}"
        query: SELECT 1;
      register: result
      failed_when: result is defined and result.failed